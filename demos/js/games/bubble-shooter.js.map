{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","source/frontend/js/games/bubble-shooter.board.js","source/frontend/js/games/bubble-shooter.bubble.js","source/frontend/js/games/bubble-shooter.collision.js","source/frontend/js/games/bubble-shooter.game.js","source/frontend/js/games/bubble-shooter.js","source/frontend/js/games/bubble-shooter.ui.js","source/frontend/js/games/jquery.kaboom.js"],"names":[],"mappingsnxrvzGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"bubble-shooter.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","var createBubble = require('./bubble-shooter.bubble.js').create;\nvar ui = require('./bubble-shooter.ui.js');\nvar $ = require('jquery');\n\nfunction buildBoard () {\n\n  var board = {};    \n\n  var NUM_ROWS = 9;\n  var NUM_COLS = 32;\n\n\n  var rows = createLayout();\n\n  function getRows() { \n    return rows;\n  }\n\n  function addBubble(bubble, coords) {\n    var rowNum = Math.floor(coords.y / ui.ROW_HEIGHT);\n    var colNum = coords.x / ui.BUBBLE_DIAMETER * 2;\n    if(rowNum % 2 === 1){\n      colNum -= 1;\n    }\n    colNum = Math.round(colNum/2) * 2;\n    if(rowNum % 2 === 0) {\n      colNum -= 1;\n    }\n    if(!rows[rowNum]) {\n      rows[rowNum] = [];\n    }\n    rows[rowNum][colNum] = bubble;\n    bubble.setRow(rowNum);\n    bubble.setColumn(colNum);\n  }\n\n  function getBubble(rowNum, colNum){\n    if(!getRows()[rowNum])\n      return null;\n      return getRows()[rowNum][colNum];\n  }\n\n  function getBubbleNeighbors(curRow, curCol){\n    var bubbles = [];\n\n    for (var rowNum = curRow -1; rowNum <= curRow + 1; rowNum++){\n      for (var colNum = curCol -2; colNum <= curCol + 2; colNum++){\n        var bubble = getBubble(rowNum, colNum);\n        if(bubble && !(colNum === curCol && rowNum === curRow)){\n          bubbles.push(bubble);\n        }\n      }\n    }\n    return bubbles;\n  }\n\n  function getGroup(bubble, found, differentColor){\n    var curRow = bubble.getRow();\n    var curCol = bubble.getColumn();\n\n    // console.log(this);\n    if(!found[curRow])\n      found[curRow] = {};\n    if(!found.list)\n      found.list = [];\n    if(found[curRow][curCol]){\n      return found;\n    }\n    found[curRow][curCol] = bubble;\n    found.list.push(bubble);\n    var surrounding = getBubbleNeighbors(curRow, curCol);\n    // console.log(\"neighbors of \"+ curRow + \", \" + curCol + \": \");\n    for(var i = 0; i < surrounding.length; i++){\n      var neighbor = surrounding[i];\n\n      // console.log(\"       neighbor \" + i + \": \" + neighbor.getRow() + \", \" + neighbor.getColumn() + \": \");\n      if(neighbor.getType() === bubble.getType() || differentColor){\n        found = getGroup(neighbor, found, differentColor);\n      }\n    }\n    return found;\n  }\n\n  function popBubble(rowNum, colNum) {\n    var row = rows[rowNum];\n    delete row[colNum];\n  }\n\n  function findOrphans() {\n    var connected = [];\n    var groups = [];\n    var i;\n\n    for(i = 0; i < rows.length; i++) {\n      connected[i] = [];\n    }\n    for(i = 0; i < rows[0].length; i++) {\n      var bubble = getBubble(0, i);\n      if(bubble && !connected[0][i]) {\n        var group = getGroup(bubble, {}, true);\n        $.each(group.list, function(){\n          connected[this.getRow()][this.getColumn()] = true;\n        });\n      }\n    }\n\n    var orphaned = [];\n    for(var i = 0; i < rows.length; i++){\n      for(var j = 0; j < rows[i].length; j++){\n        var bubble = getBubble(i, j);\n        if(bubble && !connected[i][j]){\n          orphaned.push(bubble);\n        }\n      }\n    }\n    return orphaned;\n  }\n\n  function createLayout() {\n    var rows = [];\n    for(var i=0; i<NUM_ROWS; i++){\n\n      var row = [];\n      var startCol = (i % 2 === 0) ? 1 : 0;\n      for(var j=startCol; j<NUM_COLS; j+=2){\n        var bubble = createBubble(i,j);\n        row[j] = bubble;\n      }\n      rows.push(row);\n    }\n    return rows;\n  }\n\n  board.getRows     = getRows;\n  board.addBubble   = addBubble;\n  board.getGroup    = getGroup;\n  board.getBubbleNeighbors = getBubbleNeighbors;\n  board.getBubble   = getBubble;\n  board.popBubble   = popBubble;\n  board.findOrphans = findOrphans;\n  return board;\n\n}\n\nmodule.exports = { \n  buildBoard: buildBoard \n};\n","var $ = require('jquery');\nvar Q = require('q');\nvar ui = require('./bubble-shooter.ui.js');\n\n\n\nfunction create (row, column, type) {\n\n  var bubble = {};\n\n  if(type === undefined){\n    type = Math.floor(Math.random() * 4);\n  }\n\n  var sprite = $(document.createElement(\"div\"));\n  sprite.addClass(\"bubble\");\n  sprite.addClass(\"bubble_\" + type);\n\n  function getSprite() {\n    return sprite;\n  }\n\n  function position () {\n    return sprite.position();\n  }\n\n  function animate() {\n    return sprite.animate.apply(sprite, arguments);\n  }\n\n  function animatePop() {\n    var top = type * sprite.height();\n    console.log(\"top\", top);\n    // sprite.css( \"background-position\", \"-50px -\" + top + \"px\" );\n    sprite.css(\"transform\", \"rotate(\" + (Math.random() * 360) + \"deg)\");\n\n    setTimeout(function(){\n      sprite.css({\"background-position\": \"-50px -\" + top + \"px\", \"tranform\":  \"rotate(\" + (Math.random() * 360) + \"deg)\"});\n    }, 200);\n    setTimeout(function(){\n      sprite.css({\"background-position\": \"-100px -\" + top + \"px\", \"tranform\":  \"rotate(\" + (Math.random() * 360) + \"deg)\"});\n    }, 300);\n    setTimeout(function(){\n      sprite.css({\"background-position\": \"-150px -\" + top + \"px\", \"tranform\":  \"rotate(\" + (Math.random() * 360) + \"deg)\"});\n    }, 400);\n    console.log(\"top\", top);\n    // setTimeout(function(){\n    //   sprite.remove();\n    // }, 200);\n  }\n\n  function getType() {\n    return type;\n  }\n\n  function getRow() {\n    return row;\n  }\n\n  function getColumn() {\n    return column;\n  }\n\n  function setRow(newRow) {\n    row = newRow;\n  }\n\n  function setColumn(newColumn) {\n    column = newColumn;\n  }\n\n  function getCoordinates(){\n    var coordinates = {\n      left: getColumn() * ui.BUBBLE_DIAMETER/2  + ui.BUBBLE_DIAMETER/2,\n      top:  getRow()    * ui.ROW_HEIGHT     + ui.BUBBLE_DIAMETER/2\n    };\n    return coordinates;\n  }\n\n  function destroy() {\n    console.log('bubble destroyed');\n    sprite.remove();\n    sprite = null;\n  }\n\n\n  bubble.getSprite      = getSprite;\n  bubble.position       = position;\n  bubble.animate        = animate;\n  bubble.animatePop     = animatePop;\n  bubble.getType        = getType;\n  bubble.getRow         = getRow;\n  bubble.getColumn      = getColumn;\n  bubble.setRow         = setRow;\n  bubble.setColumn      = setColumn;\n  bubble.getCoordinates = getCoordinates;\n  bubble.destroy        = destroy;\n\n  return bubble;\n}\n\nmodule.exports = {\n  create: create\n};\n","var ui = require('./bubble-shooter.ui.js');\n\n/*\n *\n *  This function needs clean up.\n *  Better variable names, comments explaining exactly what is going on\n *  algorithmically.\n *\n */\n\nfunction findIntersection(userBubble, board, angle){\n\n  // Get the rows from the board\n  var rows = board.getRows();\n\n  // The collsion we will eventually return\n  var collision;\n\n  // The bubble position as returned from the bubble\n  var userBubblePosition = userBubble.position();\n\n  // starting coordinates of the bubble to be fired, used for collision detections\n  var userBubbleStartingPoint = {\n    left : userBubblePosition.left + ui.BUBBLE_DIAMETER/2,\n    top : userBubblePosition.top + ui.BUBBLE_DIAMETER/2\n  };\n\n  // given the angle, these are the incremental distances \n  // used to calculate the distance between userBubble and another bubble\n  var dx = Math.sin(angle);\n  var dy = -Math.cos(angle);\n\n  var distanceToCollision;\n  var bubbleDestination;\n\n  for(var i=0; i<rows.length; i++) {\n\n    var row = rows[i];\n    \n    for(var j=0; j<row.length; j++) {\n\n      var bubble = row[j];\n\n      if(bubble) {\n       var coords = bubble.getCoordinates();\n       var distToBubble = {\n        x : userBubbleStartingPoint.left - coords.left,\n        y : userBubbleStartingPoint.top - coords.top\n      };\n\n      var t = dx * distToBubble.x + dy * distToBubble.y;\n      var ex = -t * dx + userBubbleStartingPoint.left;\n      var ey = -t * dy + userBubbleStartingPoint.top;\n      var distEC = Math.sqrt((ex - coords.left) * (ex - coords.left) +\n                             (ey - coords.top) * (ey - coords.top));\n      if(distEC < ui.BUBBLE_DIAMETER * 0.75){\n        var dt = Math.sqrt(ui.BUBBLE_DIAMETER * ui.BUBBLE_DIAMETER - distEC * distEC);\n        var offset1 = {\n          x : (t - dt) * dx,\n          y : -(t - dt) * dy\n        };\n        var offset2 = {\n          x : (t + dt) * dx,\n          y : -(t + dt) * dy\n        };\n        var distToCollision1 = Math.sqrt(offset1.x * offset1.x +\n                                         offset1.y * offset1.y);\n        var distToCollision2 = Math.sqrt(offset2.x * offset2.x +\n                                         offset2.y * offset2.y);\n        if(distToCollision1 < distToCollision2) {\n          distanceToCollision = distToCollision1;\n          bubbleDestination = {\n            x : offset1.x + userBubbleStartingPoint.left,\n            y : offset1.y + userBubbleStartingPoint.top\n          };\n        } \n        else {\n          distanceToCollision = distToCollision2;\n          bubbleDestination = {\n            x : -offset2.x + userBubbleStartingPoint.left,\n            y : offset2.y + userBubbleStartingPoint.top\n          };\n        }\n\n        if(!collision || collision.distanceToCollision>distanceToCollision){\n          collision = {\n            bubble : bubble,\n            distanceToCollision : distanceToCollision,\n            coords : bubbleDestination\n          };\n        }\n        }\n      }\n    }\n  }\n  return collision;\n}\n\nmodule.exports = {\n  findIntersection: findIntersection\n};\n","var $ = require('jquery');\nvar ui = require('./bubble-shooter.ui.js');\nvar createBubble = require('./bubble-shooter.bubble.js').create;\nvar board = require('./bubble-shooter.board.js');\nvar collisionDetector = require('./bubble-shooter.collision.js');\nvar kaboom = require('./jquery.kaboom.js');\n\nfunction buildGame () {\n\n  var game = {};    \n\n  var userBubble;\n  var userBubbleCount;\n  var MAX_USER_BUBBLES = 70;\n\n  function initialize () {\n    $(\".button_start_game\").bind(\"click\", startGame);\n  }\n\n  function mouseClickHandler(event){\n    var angle = ui.getBubbleAngle(userBubble, event);\n    var maxDuration = 2000;\n    var duration = maxDuration;\n    var distance = 1000;\n    var collision = collisionDetector.findIntersection(userBubble, game.board, angle);\n    var coords;\n    if(collision) {\n      console.log('collision', collision);\n      coords = collision.coords;\n      duration = Math.round(maxDuration * collision.distanceToCollision / distance);\n      console.log('collision.distanceToCollision', collision.distanceToCollision);\n      console.log('duration', duration);\n      console.log('distance', distance);\n      game.board.addBubble(userBubble, coords);\n      var group = game.board.getGroup(userBubble, {});\n      if(group.list.length >= 3){\n        popBubbles(group.list, duration);\n\n        var orphans = game.board.findOrphans();\n\n        $.each(orphans, function(){\n          console.log(\"orphan\", this);\n        })\n        var delay = duration + 1000 + 35 * group.list.length;\n        dropBubbles(orphans, delay);\n\n      }\n    }\n    else {\n      var distX = Math.sin(angle) * distance;\n      var distY = Math.cos(angle) * distance;\n      var bubbleCoords = ui.getBubblePosition(userBubble);\n      coords = {\n        x : bubbleCoords.left + distX,\n        y : bubbleCoords.top - distY\n      };\n    }\n    ui.fireBubble(userBubble, coords, duration);\n    userBubble = createNextUserBubble();\n  }\n  \n  function popBubbles(bubbles, delay) {\n    $.each(bubbles, function(){\n      \n      var bubble = this;\n      setTimeout(function(){\n        bubble.animatePop();\n      }, delay);\n\n      game.board.popBubble(this.getRow(), this.getColumn());\n      setTimeout(function(){\n        bubble.getSprite().remove();\n      }, delay + 900);\n      delay += 60;\n    }); \n  }\n\n  function dropBubbles(bubbles, delay) {\n    $.each(bubbles, function(){\n      var bubble = this;\n\n      game.board.popBubble(bubble.getRow(), bubble.getColumn());\n\n      setTimeout(function(){\n        bubble.getSprite().kaboom();\n      }, delay);\n    });\n  }\n\n  function createNextUserBubble () {\n    var bubble = createBubble();\n    bubble.getSprite().addClass(\"user_bubble\");\n    $(\"#board\").append(bubble.getSprite());\n    ui.drawUserBubbleCount(userBubbleCount);\n    userBubbleCount--;\n    return bubble;\n  }\n\n  function startGame() {\n    $(\".button_start_game\").unbind(\"click\");\n    ui.hideDialog();\n    userBubbleCount = MAX_USER_BUBBLES;\n    userBubble = createNextUserBubble();\n\n\n    // Create the game board\n    game.board = board.buildBoard();\n    ui.drawBoard(game.board);\n    \n    $(\"#game\").bind(\"click\", mouseClickHandler);\n\n  }\n\n  game.initialize = initialize;\n\n  return game;\n\n}\n\nmodule.exports = buildGame;","var $ = require('jquery');\nvar game = require('./bubble-shooter.game.js')();\n\ngame.initialize();\n","var $ = require('jquery');\n\nfunction buildUI () {\n\n  var ui = {};\n\n  var BUBBLE_DIAMETER = 44;\n  var ROW_HEIGHT      = 40;\n\n\n  function hideDialog () {\n    $(\".dialog\").fadeOut(300);\n  }\n\n  function getMousePosition(event) {\n    var coordinates = {x : event.pageX, y : event.pageY};\n    return coordinates;\n  }\n\n  function getBubblePosition(bubble) {\n    var bubblePosition = bubble.position();\n    bubblePosition.left += BUBBLE_DIAMETER/2;\n    bubblePosition.top += BUBBLE_DIAMETER/2;\n    return bubblePosition;\n  }\n\n  function getBubbleAngle(bubble, event){\n    var mousePosition = ui.getMousePosition(event);\n    var bubblePosition = ui.getBubblePosition(bubble);\n    var gamePosition = $(\"#game\").position();\n    var boardLeft = 120;\n    var angle = Math.atan((mousePosition.x - bubblePosition.left - boardLeft) / (bubblePosition.top + gamePosition.top - mousePosition.y));\n    if(mousePosition.y > bubblePosition.top + gamePosition.top){\n      angle += Math.PI;\n    }\n    return angle;\n  }\n\n  function fireBubble(bubble, coordinates, duration){\n    bubble.animate(\n      {\n        left : coordinates.x - BUBBLE_DIAMETER/2,\n        top : coordinates.y - BUBBLE_DIAMETER/2\n      },\n      {\n        duration : duration,\n        easing : \"linear\",\n        complete: function () {\n          console.log('animation complete!');\n          if(bubble.getRow() !== null){\n            bubble.getSprite().css({\n              left : bubble.getCoordinates().left - BUBBLE_DIAMETER/2,\n              top : bubble.getCoordinates().top - BUBBLE_DIAMETER/2\n            });\n          }\n        }\n      }\n    );\n  }\n\n  function drawBoard(board){\n\n    var rows = board.getRows();\n\n    var gameArea = $(\"#board\");\n\n    for(var i=0; i<rows.length; i++){\n\n      var row = rows[i];\n      for(var j=0; j<row.length; j++){\n\n        var bubble = row[j];\n        if(bubble){\n          var sprite = bubble.getSprite();\n          gameArea.append(sprite);\n          var left = j * BUBBLE_DIAMETER/2;\n          var top = i * ROW_HEIGHT;\n          sprite.css({\n            left : left,\n            top : top\n          });\n        }\n      }\n    }\n  }\n\n  function drawUserBubbleCount (numBubbles){\n    $(\"#bubbles_remaining\").text(numBubbles);\n  }\n\n  ui.hideDialog           = hideDialog;\n  ui.getMousePosition     = getMousePosition;\n  ui.getBubblePosition    = getBubblePosition;\n  ui.getBubbleAngle       = getBubbleAngle;\n  ui.fireBubble           = fireBubble;\n  ui.drawBoard            = drawBoard;\n  ui.drawUserBubbleCount  = drawUserBubbleCount;\n  ui.BUBBLE_DIAMETER      = BUBBLE_DIAMETER;\n  ui.ROW_HEIGHT           = ROW_HEIGHT;\n\n  return ui;\n\n}\n\nmodule.exports = buildUI();\n","var $ = require('jquery');\n\n(function (jQuery) {\n\t\n\tvar defaults = {\n\t\tgravity: 1.3,\n\t\tmaxY: 850\n\t};\n\n\tvar toMove = [];\n\n\tjQuery.fn.kaboom = function (settings) {\n\t\tvar config = $.extend({}, defaults, settings);\n\t\tif(toMove.length == 0) {\n\t\t\tsetTimeout(moveAll, 80);\n\t\t}\n\n\t\tvar dx = Math.round(Math.random() * 10) - 5;\n\t\tvar dy = Math.round(Math.random() * 5) + 5;\n\n\t\ttoMove.push({\n\t\t\telm: this,\n\t\t\tdx: dx,\n\t\t\tdy: dy,\n\t\t\tx: this.position().left,\n\t\t\ty: this.position().top,\n\t\t\tconfig: config\n\t\t});\n\t};\n\n\tvar moveAll = function() {\n\t\tvar frameProportion = 1;\n\t\tvar stillToMove = [];\n\t\tfor(var i = 0; i < toMove.length; i++) {\n\t\t\tvar obj = toMove[i];\n\t\t\tobj.x += obj.dx * frameProportion;\n\t\t\tobj.y -= obj.dy * frameProportion;\n\t\t\tobj.dy -= obj.config.gravity * frameProportion;\n\n\t\t\tif(obj.y < obj.config.maxY) {\n\t\t\t\tobj.elm.css({\n\t\t\t\t\ttop: Math.round(obj.y),\n\t\t\t\t\tleft: Math.round(obj.x)\n\t\t\t\t});\n\n\t\t\t\tstillToMove.push(obj);\n\t\t\t}\n\t\t\telse if(obj.config.callback) {\n\t\t\t\tobj.config.callback();\n\t\t\t}\n\n\t\t}\n\t\ttoMove = stillToMove;\n\t\tif(toMove.length > 0) {\n\t\t\tsetTimeout(moveAll, 40);\n\t\t}\n\t}\n})($);"]}